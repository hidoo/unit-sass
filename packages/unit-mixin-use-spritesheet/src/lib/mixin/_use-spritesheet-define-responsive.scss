/// define responsive item
/// @access private
/// @param {String} $name name of spritesheet item
/// @param {Map} $items [()] spritesheet items
/// @param {Map} $options [()] options
///
@mixin _use-spritesheet-define-responsive($name, $items: (), $options: ()) {
  @if not mixin-exists("define-breakpoint") {
    @error "@mixin _use-spritesheet-define-responsive: @mixin define-breakpoint is required.";
  }

  @if not mixin-exists("on-focus") {
    @error "@mixin _use-spritesheet-define-responsive: @mixin on-focus is required.";
  }

  @if not mixin-exists("on-current") {
    @error "@mixin _use-spritesheet-define-responsive: @mixin on-current is required.";
  }

  @if not mixin-exists("on-disabled") {
    @error "@mixin _use-spritesheet-define-responsive: @mixin on-disabled is required.";
  }

  @if not mixin-exists("_use-spritesheet-set-properties") {
    @error "@mixin _use-spritesheet-define-responsive: @mixin _use-spritesheet-set-properties is required.";
  }

  @if map-has-key($items, $name) {
    $up: map-get($items, $name);
    $focus: map-get($items, "#{$name}--focus");
    $current: map-get($items, "#{$name}--current");
    $disabled: map-get($items, "#{$name}--disabled");
    $up-responsive: map-get($items, "#{$name}--responsive");
    $focus-responsive: map-get($items, "#{$name}--focus--responsive");
    $current-responsive: map-get($items, "#{$name}--current--responsive");
    $disabled-responsive: map-get($items, "#{$name}--disabled--responsive");
    $use2x: map-get($options, "use2x");
    $capturing-selectors: map-get($options, "capturing-selectors");

    &-#{$name} {
      @content;

      @if $up {
        @include _use-spritesheet-set-properties(
          $values: $up,
          $use2x: false
        );

        @if $up-responsive {
          @include define-breakpoint($until: "mobile") {
            @include _use-spritesheet-set-properties(
              $values: $up-responsive,
              $use2x: $use2x
            );
          }
        }
      }

      @if $focus {
        @include on-focus($capturing-selectors: $capturing-selectors) {
          @include _use-spritesheet-set-properties(
            $values: (
              "offset-x": map-get($focus, "offset-x"),
              "offset-y": map-get($focus, "offset-y")
            ),
            $use2x: false
          );
        }

        @if $focus-responsive {
          @include define-breakpoint($until: "mobile") {
            @include on-focus($capturing-selectors: $capturing-selectors) {
              @include _use-spritesheet-set-properties(
                $values: (
                  "offset-x": map-get($focus-responsive, "offset-x"),
                  "offset-y": map-get($focus-responsive, "offset-y")
                ),
                $use2x: $use2x
              );
            }
          }
        }
      }

      @if $current {
        @include on-current($capturing-selectors: $capturing-selectors) {
          @include _use-spritesheet-set-properties(
            $values: (
              "offset-x": map-get($current, "offset-x"),
              "offset-y": map-get($current, "offset-y")
            ),
            $use2x: false
          );
        }

        @if $current-responsive {
          @include define-breakpoint($until: "mobile") {
            @include on-current($capturing-selectors: $capturing-selectors) {
              @include _use-spritesheet-set-properties(
                $values: (
                  "offset-x": map-get($current-responsive, "offset-x"),
                  "offset-y": map-get($current-responsive, "offset-y")
                ),
                $use2x: $use2x
              );
            }
          }
        }
      }

      @if $disabled {
        @include on-disabled($capturing-selectors: $capturing-selectors) {
          @include _use-spritesheet-set-properties(
            $values: (
              "offset-x": map-get($disabled, "offset-x"),
              "offset-y": map-get($disabled, "offset-y")
            ),
            $use2x: false
          );
        }

        @if $disabled-responsive {
          @include define-breakpoint($until: "mobile") {
            @include on-disabled($capturing-selectors: $capturing-selectors) {
              @include _use-spritesheet-set-properties(
                $values: (
                  "offset-x": map-get($disabled-responsive, "offset-x"),
                  "offset-y": map-get($disabled-responsive, "offset-y")
                ),
                $use2x: $use2x
              );
            }
          }
        }
      }
    }
  }
  @else {
    @warn "@mixin _use-spritesheet-define-responsive: Spritesheet '#{$name}' was not generate, because $name: '#{$name}' is not found.";
  }
}
