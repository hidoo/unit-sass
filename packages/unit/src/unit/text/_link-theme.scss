@use "sass:map";
@use "sass:meta";
@use "../../lib/mixin";
@use "../../settings";

/*
link-theme

link-theme modifiers of #{settings.$prefix}-text

Weight: -98

Style guide: #{settings.$prefix}-text.link-theme
*/

/*
modifiers: link-theme

builtin modifiers of theme for #{settings.$prefix}-text__link

Weight: -100

Markup: <h1 class="#{settings.$prefix}-text">Lorem ipsum dolor <a class="#{settings.$prefix}-text__link  {{modifier_class}}" href="javascript:;">sit amet</a>.</h1>
<p class="#{settings.$prefix}-text">Lorem ipsum dolor <a class="#{settings.$prefix}-text__link  {{modifier_class}}" href="javascript:;">sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</a>.</p>

#{settings.$prefix}-text__link--theme-light - light theme
#{settings.$prefix}-text__link--theme-dark - dark theme

Style guide: #{settings.$prefix}-text.link-theme.builtin
*/
.#{settings.$prefix}-text__link--theme { // stylelint-disable-line scss/selector-nest-combinators
  @if meta.type-of(settings.$builtin-themes) == "map" {
    @each $name, $theme in settings.$builtin-themes {
      $color: map.get($theme, "color");
      $color-focus: map.get($theme, "color-focus");

      &-#{$name} {
        @include mixin.on-link() {
          text-decoration: underline;
          color: $color;
        }

        @include mixin.on-focus() {
          text-decoration: none;
          color: $color-focus;
        }
      }
    }
  }
}
