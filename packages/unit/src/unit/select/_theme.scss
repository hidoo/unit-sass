@use "sass:map";
@use "sass:meta";
@use "sass:string";
@use "../../lib/mixin";
@use "../../settings";

/*
theme

theme modifiers of #{settings.$prefix}-select

Weight: -99

Style guide: #{settings.$prefix}-select.theme
*/

/*
modifiers: theme

builtin modifiers of theme for #{settings.$prefix}-select

Weight: -100

Markup: <span class="#{settings.$prefix}-select  {{modifier_class}}">
  <select class="#{settings.$prefix}-select__field" name="{{modifier_class}}">
    <option value="">select...</option>
    <option value="option-1">Lorem ipsum dolor sit amet</option>
    <option value="option-2">Consectetur adipiscing elit</option>
  </select>
</span>
<!-- disabled -->
<span class="#{settings.$prefix}-select  {{modifier_class}}">
  <select class="#{settings.$prefix}-select__field" name="{{modifier_class}}" disabled="disabled">
    <option value="">select...</option>
    <option value="option-1">Lorem ipsum dolor sit amet</option>
    <option value="option-2">Consectetur adipiscing elit</option>
  </select>
</span>

#{settings.$prefix}-select--theme-light - light theme
#{settings.$prefix}-select--theme-dark - dark theme

Style guide: #{settings.$prefix}-select.theme.builtin
*/
.#{settings.$prefix}-select--theme { // stylelint-disable-line scss/selector-nest-combinators
  $selector: string.unique-id();
  $selector-field: string.unique-id();

  @include mixin.placeholder-define($name: $selector) {
    &::after {
      content: "";
      position: absolute;
      z-index: 1;
      top: 0;
      right: 12px;
      bottom: 0;
      width: 0;
      height: 0;
      margin: auto 0;
      border-top-style: solid;
      border-top-width: 8px;
      border-right: 6px solid transparent;
      border-bottom: 0 solid transparent;
      border-left: 6px solid transparent;
      opacity: 0.8;
    }
  }

  @include mixin.placeholder-define($name: $selector-field) {
    padding: 10px 30px 10px 10px;
    border-radius: 3px;
    transition-duration: 0.1s;
    transition-property: border-color;
    transition-timing-function: ease-out;
  }

  @if meta.type-of(settings.$builtin-themes) == "map" {
    @each $name, $theme in settings.$builtin-themes {
      $color: map.get($theme, "color");
      $color-focus: map.get($theme, "color-focus");
      $background: map.get($theme, "background");
      $background-focus: map.get($theme, "background-focus");
      $border: map.get($theme, "border");
      $border-focus: map.get($theme, "border-focus");

      &-#{$name} {
        @extend %#{$selector};

        color: $color;

        &::after {
          border-top-color: $color-focus;
        }

        > .#{settings.$prefix}-select__field { // stylelint-disable-line scss/selector-nest-combinators
          @extend %#{$selector-field};

          background-color: $background;
          border: 1px solid $border;

          @include mixin.on-focus() {
            color: $color-focus;
            border-color: $border-focus;
          }

          @include mixin.on-disabled() {
            border: 1px solid $border;
          }
        }
      }
    }
  }
}
