@use "sass:meta";
@use "../../lib/mixin";
@use "../../settings";

/*
#{settings.$prefix}-input

component for input field.

Weight: -1030

Style guide: #{settings.$prefix}-input
*/

/*
core

core module of #{settings.$prefix}-input

Weight: -100

Style guide: #{settings.$prefix}-input.core
*/

/*
default style

default style of #{settings.$prefix}-input

Weight: -100

Markup: <!-- input -->
<input class="#{settings.$prefix}-input" type="text" name="{{modifier_class}}" value="" placeholder="Lorem ipsum dolor sit amet." />
<!-- input:disabled -->
<input class="#{settings.$prefix}-input" type="text" name="{{modifier_class}}" value="" placeholder="Lorem ipsum dolor sit amet." disabled="disabled" />
<!-- textarea -->
<textarea class="#{settings.$prefix}-input" name="{{modifier_class}}" rows="5" cols="10" placeholder="Lorem ipsum dolor sit amet."></textarea>

Style guide: #{settings.$prefix}-input.core.base
*/
.#{settings.$prefix}-input { // stylelint-disable-line scss/selector-nest-combinators
  @include mixin.use-box-base(
    $box-sizing: "border-box"
  );
  @include mixin.use-text-base(
    $line-height: "normal",
    $white-space: null,
    $word-wrap: null
  );
  @include mixin.use-font-base();
  @include mixin.use-font-size(
    $value: "medium"
  );

  width: 100%;
  color: inherit;
  background-color: transparent;
  border-radius: 0;

  // stylelint-disable-next-line plugin/no-unsupported-browser-features
  outline: 0;

  // stylelint-disable-next-line plugin/no-unsupported-browser-features
  appearance: none;

  @at-root {
    textarea#{&} {
      line-height: if(meta.type-of(settings.$line-height) == "number", settings.$line-height, 1.5);

      // for smooth scrolling
      -webkit-overflow-scrolling: touch;

      // restrict to only vertical resizing
      // + ie, edge, ios and android are not supported
      // stylelint-disable-next-line plugin/no-unsupported-browser-features
      resize: vertical;
    }
  }

  @include mixin.on-disabled() {
    opacity: 0.5;
  }
}
