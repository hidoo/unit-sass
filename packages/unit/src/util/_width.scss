/*
width

utilities that tweek of width

Weight: -98

Style guide: #{$unit-util-prefix}.width
*/

/*
modifiers: width

builtin modifiers of width.
(0 to 150px in 25px steps, 200px to 450px in 50px steps, 500px to 1000px in 100px steps)

Weight: -100

Markup: <div style="position:relative; padding:50px;">
  <div class="{{modifier_class}}" style="position:relative; width:50px; height:50px; background:#999;"></div>
</div>

#{$unit-util-prefix}--width-0 - 0px width
#{$unit-util-prefix}--width-min-0 - 0px min width
#{$unit-util-prefix}--width-max-0 - 0px min width
#{$unit-util-prefix}--width-1000 - 1000px width
#{$unit-util-prefix}--width-min-1000 - 1000px min width
#{$unit-util-prefix}--width-max-1000 - 1000px min width
#{$unit-util-prefix}--width-fit - 100% width
#{$unit-util-prefix}--width-min-fit - 100% min width
#{$unit-util-prefix}--width-max-fit - 100% min width
#{$unit-util-prefix}--width-auto - auto width

Style guide: #{$unit-util-prefix}.width.builtin
*/
.#{$unit-util-prefix}--width {
  $values: (
    0,
    25px, 50px, 75px, 100px, 125px, 150px,
    200px, 250px, 300px, 350px, 400px, 450px,
    500px, 600px, 700px, 800px, 900px, 1000px
  );

  // each by sizes
  @include define-sizes($type: "width", $values: $values);

  &-fit {
    width: 100% !important;
  }

  &-min-fit {
    min-width: 100% !important;
  }

  &-max-fit {
    max-width: 100% !important;
  }

  &-auto {
    width: auto !important;
  }
}
