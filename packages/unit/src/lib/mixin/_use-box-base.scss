////
/// (c) hidoo | MIT Lisence
/// @group features
////

@use "./box";

/// use settings of initialized box
/// @param {String} $display ["block"] - setting for `display`
/// @param {String} $overflow [null] - setting for `overflow`
/// @param {String} $box-sizing ["content-box"] - setting for `box-sizing`
/// @param {String} $position ["relative"] - setting for `position`
/// @param {String} $list-style [0] - setting for `list-style`
/// @param {Number|List} $margin [0] - setting for `margin`
/// @param {Number|List} $padding [0] - setting for `padding`
/// @param {Number|List} $border [0] - setting for `border`
///
/// @deprecated
///
/// @example scss - scss inputs
///   .selector {
///     @include use-box-base();
///   }
///
/// @example css - css outputs
///   .selector {
///     display: block;
///     box-sizing: content-box;
///     position: relative;
///     list-style: none;
///     margin: 0;
///     padding: 0;
///     border: 0;
///   }
///
@mixin use-box-base($args...) {
  @warn "[DEPRECATED] mixin.use-box-base is deprecated. Use instead mixin.box-initialize.";

  @include box.initialize($args...);
}
