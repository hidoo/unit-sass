////
/// (c) hidoo | MIT Lisence
/// @group features
////

/// use settings of `font-family`
/// @param {List|String} $value [null] - setting for `font-family` (one of `"default"`, `"monospace"` or `(...)`)
/// @param {Boolean} $important [false] - set `!important` or not
///
/// @require {variable} unit-font-enable-override
/// @require {variable} unit-font-family
/// @require {variable} unit-font-family-monospace
///
/// @example scss - scss inputs
///   .selector {
///     @include use-font-family($value: "default", $important: true);
///   }
///
/// @example css - css outputs
///   .selector {
///     font-family: -apple-system, BlinkMacSystemFont, Helvetica, Arial, "Hiragino Kaku Gothic ProN", "Yu Gothic Medium", "游ゴシック Medium", YuGothic, Meiryo, "メイリオ", sans-serif !important;
///   }
///
@mixin use-font-family($value, $important: false) {
  @if (
    global-variable-exists("unit-font-enable-override") and
    $unit-font-enable-override
  ) {
    @if type-of($value) == "list" and length($value) >= 1 {
      font-family: $value if($important, !important, null);
    }
    @else if $value == "default" {
      @if (global-variable-exists("unit-font-family")) {
        font-family: $unit-font-family if($important, !important, null);
      }
      @else {
        @error "@mixin use-font-family: Global variable $unit-font-family is undefined.";
      }
    }
    @else if $value == "monospace" {
      @if (global-variable-exists("unit-font-family-monospace")) {
        font-family: $unit-font-family-monospace if($important, !important, null);
      }
      @else {
        @error "@mixin use-font-family: Global variable $unit-font-family-monospace is undefined.";
      }
    }
  }
}
